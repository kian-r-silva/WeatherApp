{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forcast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport Temp from './components/charts/weekly-temp';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const currentWeather = useSelector(state => state.currentWeather.data);\n  const forecastWeather = useSelector(state => state.forecastWeather.data);\n  const chartData = useSelector(state => state.chartData.data);\n  console.log('currentWeather', currentWeather);\n  console.log('forecastWeather', forecastWeather);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const city = searchData.label;\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weather = await response[0].json();\n      const forecast = await response[1].json();\n      dispatch({\n        type: 'SET_CURRENT_WEATHER',\n        payload: {\n          city: city,\n          ...weather\n        }\n      });\n      dispatch({\n        type: 'SET_FORECAST_WEATHER',\n        payload: forecast\n      });\n      dispatch({\n        type: 'SET_CHART_DATA',\n        payload: forecast\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log('currentWeather', currentWeather);\n  console.log('forecastWeather', forecastWeather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-weather\" /* hidden={null == currentWeather } */,\n      children: currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: dispatch(currentWeather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temp-chart\" /* hidden={null == chartData} */,\n      children: chartData && /*#__PURE__*/_jsxDEV(Temp, {\n        data: dispatch(chartData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-forecast\" /* hidden={null == forecastWeather} */,\n      children: forecastWeather && /*#__PURE__*/_jsxDEV(Forecast, {\n        data: dispatch(forecastWeather)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tsLemfwhV8jbcKSxZ+Du+P69YX0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Forecast","CurrentWeather","Temp","WEATHER_API_KEY","WEATHER_API_URL","useDispatch","useSelector","jsxDEV","_jsxDEV","App","_s","dispatch","currentWeather","state","data","forecastWeather","chartData","console","log","handleOnSearchChange","searchData","lat","lon","value","split","city","label","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weather","json","forecast","type","payload","catch","err","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forcast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport Temp from './components/charts/weekly-temp';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const currentWeather = useSelector((state) => state.currentWeather.data);\n  const forecastWeather = useSelector((state) => state.forecastWeather.data);\n  const chartData = useSelector((state) => state.chartData.data);\n\n  console.log('currentWeather', currentWeather)\n  console.log('forecastWeather', forecastWeather)\n\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const city = searchData.label\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async (response) => {\n        const weather = await response[0].json();\n        const forecast = await response[1].json();\n\n        dispatch({ type: 'SET_CURRENT_WEATHER', payload: { city: city, ...weather } });\n        dispatch({ type: 'SET_FORECAST_WEATHER', payload: forecast });\n        dispatch({ type: 'SET_CHART_DATA', payload: forecast });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  console.log('currentWeather', currentWeather)\n  console.log('forecastWeather', forecastWeather)\n\n  return (\n    <div className=\"body\">\n      <div className=\"search\">\n        <Search onSearchChange={handleOnSearchChange} />\n      </div>\n      <div className='main-weather' /* hidden={null == currentWeather } */>\n        {currentWeather && <CurrentWeather data={dispatch(currentWeather)} />}\n      </div>\n      <div className='temp-chart' /* hidden={null == chartData} */>\n        {chartData  && <Temp data={dispatch(chartData)}/>}\n      </div>\n      <div className='main-forecast' /* hidden={null == forecastWeather} */>\n        {forecastWeather && <Forecast data={dispatch(forecastWeather)}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,cAAc,MAAM,8CAA8C;AACzE,OAAOC,IAAI,MAAM,iCAAiC;AAClD,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,cAAc,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,cAAc,CAACE,IAAI,CAAC;EACxE,MAAMC,eAAe,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACE,eAAe,CAACD,IAAI,CAAC;EAC1E,MAAME,SAAS,GAAGV,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACG,SAAS,CAACF,IAAI,CAAC;EAE9DG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,cAAc,CAAC;EAC7CK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,eAAe,CAAC;EAG/C,MAAMI,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAC9C,MAAMC,IAAI,GAAGL,UAAU,CAACM,KAAK;IAE7B,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAExB,eAAgB,gBAAeiB,GAAI,QAAOC,GAAI,UAASnB,eAAgB,eAAc,CAAC;IAC3H,MAAM0B,aAAa,GAAGD,KAAK,CAAE,GAAExB,eAAgB,iBAAgBiB,GAAI,QAAOC,GAAI,UAASnB,eAAgB,eAAc,CAAC;IAEtH2B,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,aAAa,CAAC,CAAC,CAC9CG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,OAAO,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEzCxB,QAAQ,CAAC;QAAE0B,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAE;UAAEb,IAAI,EAAEA,IAAI;UAAE,GAAGS;QAAQ;MAAE,CAAC,CAAC;MAC9EvB,QAAQ,CAAC;QAAE0B,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAEF;MAAS,CAAC,CAAC;MAC7DzB,QAAQ,CAAC;QAAE0B,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAEF;MAAS,CAAC,CAAC;IACzD,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKvB,OAAO,CAACC,GAAG,CAACsB,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDvB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,cAAc,CAAC;EAC7CK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,eAAe,CAAC;EAE/C,oBACEP,OAAA;IAAKiC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlC,OAAA;MAAKiC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBlC,OAAA,CAACT,MAAM;QAAC4C,cAAc,EAAExB;MAAqB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,cAAc,CAAC;MAAAC,QAAA,EAC3B9B,cAAc,iBAAIJ,OAAA,CAACP,cAAc;QAACa,IAAI,EAAEH,QAAQ,CAACC,cAAc;MAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,YAAY,CAAC;MAAAC,QAAA,EACzB1B,SAAS,iBAAKR,OAAA,CAACN,IAAI;QAACY,IAAI,EAAEH,QAAQ,CAACK,SAAS;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,eAAe,CAAC;MAAAC,QAAA,EAC5B3B,eAAe,iBAAIP,OAAA,CAACR,QAAQ;QAACc,IAAI,EAAEH,QAAQ,CAACI,eAAe;MAAE;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CAhDQD,GAAG;EAAA,QACOJ,WAAW,EACLC,WAAW,EACVA,WAAW,EACjBA,WAAW;AAAA;AAAA0C,EAAA,GAJtBvC,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}