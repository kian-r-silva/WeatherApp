{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/charts/charts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AgChartsReact } from 'ag-charts-react';\n\n// Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visibility = ({\n  data\n}) => {\n  _s();\n  const data_parse = data.list.splice(0, 8);\n  const [chartOptions, setChartOptions] = useState({\n    // Data: Data to be displayed in the chart\n    timeVis: [{\n      time: new Date(data_parse[0].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[1].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[2].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[3].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[4].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[5].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[6].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[7].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }, {\n      time: new Date(data_parse[8].dt * 1000).getHours(),\n      visibility: data_parse[0].visibility\n    }],\n    // Series: Defines which chart type and data to use\n    series: [{\n      type: 'line',\n      xKey: 'time',\n      yKey: 'visibility (km)'\n    }]\n  });\n  return (\n    /*#__PURE__*/\n    // AgCharsReact component with options passed as prop\n    _jsxDEV(AgChartsReact, {\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Visibility, \"vw5ZXDbbOWxhAKUrpUV62ayHnMg=\");\n_c = Visibility;\nexport default Visibility;\nvar _c;\n$RefreshReg$(_c, \"Visibility\");","map":{"version":3,"names":["React","useState","AgChartsReact","jsxDEV","_jsxDEV","Visibility","data","_s","data_parse","list","splice","chartOptions","setChartOptions","timeVis","time","Date","dt","getHours","visibility","series","type","xKey","yKey","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/charts/charts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AgChartsReact } from 'ag-charts-react';\n\n// Chart Component\nconst Visibility = ({data}) => {\n  const data_parse = data.list.splice(0,8)\n  const [chartOptions, setChartOptions] = useState({\n    // Data: Data to be displayed in the chart\n    timeVis: [\n        { time: new Date(data_parse[0].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[1].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[2].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[3].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[4].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[5].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[6].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[7].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n        { time: new Date(data_parse[8].dt * 1000).getHours(), visibility: data_parse[0].visibility},\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'line', xKey: 'time', yKey: 'visibility (km)' }],\n  });\n  return (\n    // AgCharsReact component with options passed as prop\n    <AgChartsReact options={chartOptions}/>\n  );\n}\n\nexport default Visibility;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}