{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Temp = ({\n  data\n}) => {\n  _s();\n  const dataParse = data;\n  const aggregatedData = {};\n  dataParse.forEach(item => {\n    const day = getDayOfWeek(item.dt_txt);\n    if (!aggregatedData[day]) {\n      aggregatedData[day] = {\n        count: 0,\n        totalTemp: 0\n      };\n    }\n    aggregatedData[day].count += 1;\n    aggregatedData[day].totalTemp += item.main.temp;\n  });\n  const chartData = Object.keys(aggregatedData).map(day => ({\n    day,\n    temperature: aggregatedData[day].totalTemp / aggregatedData[day].count\n  }));\n  function getDayOfWeek(dateString) {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return daysOfWeek[date.getDay()];\n  }\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    axes: [{\n      type: 'ordinal',\n      position: 'bottom',\n      tick: {\n        count: 7\n      }\n    }, {\n      type: 'number',\n      position: 'right'\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    className: \"vis\",\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      data: chartOptions.data,\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"colorUv\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"5%\",\n            stopColor: \"#8884d8\",\n            stopOpacity: 0.8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"95%\",\n            stopColor: \"#8884d8\",\n            stopOpacity: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"day\",\n        type: \"category\",\n        strokeWidth: '2',\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        strokeWidth: '2',\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Temp, \"Bdnwl8HsCE1Q2VYathfJtWkjLkI=\");\n_c = Temp;\nexport default Temp;\nvar _c;\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useState","AreaChart","Area","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Temp","data","_s","dataParse","aggregatedData","forEach","item","day","getDayOfWeek","dt_txt","count","totalTemp","main","temp","chartData","Object","keys","map","temperature","dateString","daysOfWeek","date","Date","getDay","chartOptions","setChartOptions","title","axes","type","position","tick","className","children","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","strokeWidth","stroke","fill","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nconst Temp = ({ data }) => {\n  const dataParse = data;\n\n  const aggregatedData = {};\n  dataParse.forEach((item) => {\n    const day = getDayOfWeek(item.dt_txt);\n    if (!aggregatedData[day]) {\n      aggregatedData[day] = { count: 0, totalTemp: 0 };\n    }\n    aggregatedData[day].count += 1;\n    aggregatedData[day].totalTemp += item.main.temp;\n  });\n\n  const chartData = Object.keys(aggregatedData).map((day) => ({\n    day,\n    temperature: aggregatedData[day].totalTemp / aggregatedData[day].count,\n  }));\n\n  function getDayOfWeek(dateString) {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return daysOfWeek[date.getDay()];\n  }\n\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    axes: [{ type: 'ordinal', position: 'bottom', tick: { count: 7 } }, { type: 'number', position: 'right' }],\n  });\n\n  return (\n    <ResponsiveContainer className='vis'>\n      <AreaChart data={chartOptions.data}>\n        <defs>\n        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n          <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n        </linearGradient>\n        </defs>\n        <XAxis dataKey=\"day\" type=\"category\" strokeWidth={'2'} stroke=\"black\"/>\n        <YAxis strokeWidth={'2'} stroke=\"black\"/>\n        <Tooltip />\n        <Area type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default Temp;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}