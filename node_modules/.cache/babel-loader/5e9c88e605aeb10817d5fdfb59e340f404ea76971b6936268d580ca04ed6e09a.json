{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/forecast/forecast.js\";\nimport { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport './forecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAY = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst Forecast = ({\n  data\n}) => {\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAY.slice(dayInAWeek, WEEK_DAY.length).concat(WEEK_DAY.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n      className: \"title\",\n      children: \"Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), data.list.splice(0, 7).map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"weather\",\n        className: \"icon-small\",\n        src: `icons/${item.weather[0].icon}.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"day\",\n        children: forecastDays[idx]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"description\",\n        children: item.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"min-max\",\n        children: [Math.round(item.main.temp_min), \"\\xB0C / \", Math.round(item.main.temp_max), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["Accordion","AccordionItem","AccordionItemButton","AccordionItemHeading","AccordionItemPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","WEEK_DAY","Forecast","data","dayInAWeek","Date","getDay","forecastDays","slice","length","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","list","splice","map","item","idx","alt","src","weather","icon","description","Math","round","main","temp_min","temp_max","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/forecast/forecast.js"],"sourcesContent":["import { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport './forecast.css'\nconst WEEK_DAY = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\nconst Forecast = ({ data }) => {\n    const dayInAWeek = new Date().getDay();\n    const forecastDays = WEEK_DAY.slice(dayInAWeek, WEEK_DAY.length).concat(WEEK_DAY.slice(0, dayInAWeek))\n\n    return (\n        <> \n            <lable className=\"title\">Forecast</lable>\n            {data.list.splice(0, 7).map((item, idx) => (\n                <div className=\"daily-item\">\n                    <img alt=\"weather\" className=\"icon-small\" src={`icons/${item.weather[0].icon}.png`} />\n                    <label className=\"day\">{forecastDays[idx]}</label>\n                    <label className=\"description\">{item.weather[0].description}</label>\n                    <label className=\"min-max\">{Math.round(item.main.temp_min)}°C / {Math.round(item.main.temp_max)}°C</label>\n                </div>  \n                ))}\n            \n        </>)\n}\n\nexport default Forecast;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,oBAAoB,EAAEC,kBAAkB,QAAQ,4BAA4B;AACpI,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvB,MAAMC,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;AAE/F,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC3B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACtC,MAAMC,YAAY,GAAGN,QAAQ,CAACO,KAAK,CAACJ,UAAU,EAAEH,QAAQ,CAACQ,MAAM,CAAC,CAACC,MAAM,CAACT,QAAQ,CAACO,KAAK,CAAC,CAAC,EAAEJ,UAAU,CAAC,CAAC;EAEtG,oBACIN,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAOc,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACxCb,IAAI,CAACc,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAClCvB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBb,OAAA;QAAKwB,GAAG,EAAC,SAAS;QAACV,SAAS,EAAC,YAAY;QAACW,GAAG,EAAG,SAAQH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtFlB,OAAA;QAAOc,SAAS,EAAC,KAAK;QAAAD,QAAA,EAAEJ,YAAY,CAACc,GAAG;MAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDlB,OAAA;QAAOc,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAES,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACE;MAAW;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpElB,OAAA;QAAOc,SAAS,EAAC,SAAS;QAAAD,QAAA,GAAEgB,IAAI,CAACC,KAAK,CAACR,IAAI,CAACS,IAAI,CAACC,QAAQ,CAAC,EAAC,UAAK,EAACH,IAAI,CAACC,KAAK,CAACR,IAAI,CAACS,IAAI,CAACE,QAAQ,CAAC,EAAC,OAAE;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzG,CACJ,CAAC;EAAA,eAER,CAAC;AACX,CAAC;AAAAgB,EAAA,GAjBK9B,QAAQ;AAmBd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}