{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/forcast/forecast.js\";\n// import { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport React from 'react';\nimport './forecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAY = ['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun'];\nconst MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\nconst Forecast = ({\n  data\n}) => {\n  const today = new Date();\n  const date = today.getDate();\n  const dayInAWeek = today.getDay();\n  const currentMonth = today.getMonth();\n  const forecastDays = WEEK_DAY.slice(dayInAWeek).concat(WEEK_DAY.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data.slice(0, 7).map((item, idx) => {\n      const nextDate = date + idx;\n      const nextMonth = currentMonth + Math.floor((today.getDate() + idx) / new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"weather icon\",\n          src: `icons/${item.weather[0].icon}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"day\",\n          children: [forecastDays[idx], \", \", MONTH[nextMonth % 12], \" \", nextDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: item.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"min-max\",\n          children: [Math.round(item.main.temp_min), \"\\xB0C / \", Math.round(item.main.temp_max), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-item\",\n      children: \"Month forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","WEEK_DAY","MONTH","Forecast","data","today","Date","date","getDate","dayInAWeek","getDay","currentMonth","getMonth","forecastDays","slice","concat","children","map","item","idx","nextDate","nextMonth","Math","floor","getFullYear","className","alt","src","weather","icon","fileName","_jsxFileName","lineNumber","columnNumber","description","round","main","temp_min","temp_max","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/forcast/forecast.js"],"sourcesContent":["// import { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport React from 'react';\nimport './forecast.css';\n\nconst WEEK_DAY = ['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun'];\nconst MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\nconst Forecast = ({ data }) => {\n  const today = new Date();\n  const date = today.getDate();\n  const dayInAWeek = today.getDay();\n  const currentMonth = today.getMonth();\n\n  const forecastDays = WEEK_DAY.slice(dayInAWeek).concat(WEEK_DAY.slice(0, dayInAWeek));\n\n  return (\n    <>\n      {data.slice(0, 7).map((item, idx) => {\n        const nextDate = date + idx;\n        const nextMonth = currentMonth + Math.floor((today.getDate() + idx) / new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate());\n\n        return (\n          <div className=\"daily-item\" key={idx}>\n            <img alt=\"weather icon\" src={`icons/${item.weather[0].icon}.png`} />\n            <span className=\"day\">{forecastDays[idx]}, {MONTH[nextMonth % 12]} {nextDate}</span>\n            <span className=\"description\">{item.weather[0].description}</span>\n            <span className=\"min-max\">{Math.round(item.main.temp_min)}°C / {Math.round(item.main.temp_max)}°C</span>\n          </div>\n        );\n      })}\n      <div className='month-item'>Month forecast</div>\n    </>\n  );\n};\n\nexport default Forecast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}