{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/search/search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_KEY, GEO_API_URL } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}q=${inputValue}&appid=${GEO_API_KEY}`).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_KEY","GEO_API_URL","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","handleOnChange","searchData","loadOptions","inputValue","fetch","then","response","json","console","log","catch","err","error","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\";\nimport {AsyncPaginate} from \"react-select-async-paginate\";\nimport { GEO_API_KEY, GEO_API_URL } from \"../../api\";\n\nconst Search = ({onSearchChange}) => {\n\n    const [search, setSearch] = useState(null);\n\n    const handleOnChange = (searchData) => {\n        setSearch(searchData);\n        onSearchChange(searchData);\n    }\n\n    const loadOptions = (inputValue) => {\n        return fetch(`${GEO_API_URL}q=${inputValue}&appid=${GEO_API_KEY}`)\n            .then((response) => response.json())\n            .then((response) => console.log(response))\n            .catch((err) => console.error(err))\n    }\n    return (\n        <AsyncPaginate\n            placeholder=\"Search for city\"\n            debounceTimeout = {600}\n            value = {search}\n            onChange = {handleOnChange}\n            loadOptions={loadOptions}\n        />\n    )\n}\n\nexport default Search;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,aAAa,QAAO,6BAA6B;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,cAAc,GAAIC,UAAU,IAAK;IACnCF,SAAS,CAACE,UAAU,CAAC;IACrBL,cAAc,CAACK,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMC,WAAW,GAAIC,UAAU,IAAK;IAChC,OAAOC,KAAK,CAAE,GAAEZ,WAAY,KAAIW,UAAW,UAASZ,WAAY,EAAC,CAAC,CAC7Dc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CACzCI,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EAC3C,CAAC;EACD,oBACIjB,OAAA,CAACJ,aAAa;IACVuB,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAI,GAAI;IACvBC,KAAK,EAAIjB,MAAO;IAChBkB,QAAQ,EAAIhB,cAAe;IAC3BE,WAAW,EAAEA;EAAY;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAxBKF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}