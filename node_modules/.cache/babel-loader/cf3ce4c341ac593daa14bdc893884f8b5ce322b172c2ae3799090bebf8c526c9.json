{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Temp = ({\n  data\n}) => {\n  _s();\n  const dataParse = data.list;\n  const chartData = dataParse.map(item => ({\n    time: Number(item.dt_txt.slice(11, 13)),\n    temperature: item.main.temp\n  }));\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    series: [{\n      type: 'line',\n      xKey: 'time',\n      yKey: 'Tempurature'\n    }],\n    axes: [{\n      type: 'ordinal',\n      position: 'bottom',\n      tick: {\n        count: 10\n      }\n    }, {\n      type: 'number',\n      position: 'right'\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    className: \"vis\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartOptions.data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), chartOptions.series.map((s, index) => /*#__PURE__*/_jsxDEV(Line, {\n        type: s.type,\n        dataKey: s.yKey\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Temp, \"y9iJh191IgPQUexBwDPMQd9xEro=\");\n_c = Temp;\nexport default Temp;\nvar _c;\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Temp","data","_s","dataParse","list","chartData","map","item","time","Number","dt_txt","slice","temperature","main","temp","chartOptions","setChartOptions","title","series","type","xKey","yKey","axes","position","tick","count","className","children","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","s","index","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nconst Temp = ({ data }) => {\n  const dataParse = data.list;\n\n  const chartData = dataParse.map((item) => ({\n    time: Number(item.dt_txt.slice(11, 13)),\n    temperature: item.main.temp,\n  }));\n\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    series: [{ type: 'line', xKey: 'time', yKey: 'Tempurature' }],\n    axes: [{ type: 'ordinal', position: 'bottom', tick: { count: 10 } }, { type: 'number', position: 'right' }],\n  });\n\n  return (\n    <ResponsiveContainer className='vis'>\n      <LineChart data={chartOptions.data}>\n        <XAxis dataKey=\"time\" type=\"number\" />\n        <YAxis />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        {chartOptions.series.map((s, index) => (\n          <Line key={index} type={s.type} dataKey={s.yKey} />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default Temp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,UAAU;AACrG,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAI;EAE3B,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,CAAEC,IAAI,KAAM;IACzCC,IAAI,EAAEC,MAAM,CAACF,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvCC,WAAW,EAAEL,IAAI,CAACM,IAAI,CAACC;EACzB,CAAC,CAAC,CAAC;EAEH,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC;IAC/C2B,KAAK,EAAE,aAAa;IACpBhB,IAAI,EAAEI,SAAS;IACfa,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAc,CAAC,CAAC;IAC7DC,IAAI,EAAE,CAAC;MAAEH,IAAI,EAAE,SAAS;MAAEI,QAAQ,EAAE,QAAQ;MAAEC,IAAI,EAAE;QAAEC,KAAK,EAAE;MAAG;IAAE,CAAC,EAAE;MAAEN,IAAI,EAAE,QAAQ;MAAEI,QAAQ,EAAE;IAAQ,CAAC;EAC5G,CAAC,CAAC;EAEF,oBACExB,OAAA,CAACF,mBAAmB;IAAC6B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClC5B,OAAA,CAACR,SAAS;MAACU,IAAI,EAAEc,YAAY,CAACd,IAAK;MAAA0B,QAAA,gBACjC5B,OAAA,CAACN,KAAK;QAACmC,OAAO,EAAC,MAAM;QAACT,IAAI,EAAC;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCjC,OAAA,CAACL,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTjC,OAAA,CAACH,aAAa;QAACqC,eAAe,EAAC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjC,OAAA,CAACJ,OAAO;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACVjB,YAAY,CAACG,MAAM,CAACZ,GAAG,CAAC,CAAC4B,CAAC,EAAEC,KAAK,kBAChCpC,OAAA,CAACP,IAAI;QAAa2B,IAAI,EAAEe,CAAC,CAACf,IAAK;QAACS,OAAO,EAAEM,CAAC,CAACb;MAAK,GAArCc,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAAC9B,EAAA,CA5BIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}