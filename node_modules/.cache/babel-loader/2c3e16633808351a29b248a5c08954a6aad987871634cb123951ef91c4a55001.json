{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/forecast/forecast.js\";\n// import { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport './forecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEEK_DAY = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst Forecast = ({\n  data\n}) => {\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAY.slice(dayInAWeek, WEEK_DAY.length).concat(WEEK_DAY.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [data.list.splice(0, 7).map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"weather\",\n        className: \"icon-small\",\n        src: `icons/${item.weather[0].icon}.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"day\",\n        children: forecastDays[idx]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"description\",\n        children: item.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"min-max\",\n        children: [Math.round(item.main.temp_min), \"\\xB0C / \", Math.round(item.main.temp_max), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-item\",\n      children: \"Month forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","WEEK_DAY","Forecast","data","dayInAWeek","Date","getDay","forecastDays","slice","length","concat","className","children","list","splice","map","item","idx","alt","src","weather","icon","fileName","_jsxFileName","lineNumber","columnNumber","description","Math","round","main","temp_min","temp_max","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/forecast/forecast.js"],"sourcesContent":["// import { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from \"react-accessible-accordion\";\nimport './forecast.css'\nconst WEEK_DAY = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\nconst Forecast = ({ data }) => {\n    const dayInAWeek = new Date().getDay();\n    const forecastDays = WEEK_DAY.slice(dayInAWeek, WEEK_DAY.length).concat(WEEK_DAY.slice(0, dayInAWeek))\n\n    return (\n        <div className='container'> \n            {data.list.splice(0, 7).map((item, idx) => (\n                <div className=\"daily-item\" key={idx}>\n                    <img alt=\"weather\" className=\"icon-small\" src={`icons/${item.weather[0].icon}.png`} />\n                    <label className=\"day\">{forecastDays[idx]}</label>\n                    <label className=\"description\">{item.weather[0].description}</label>\n                    <label className=\"min-max\">{Math.round(item.main.temp_min)}°C / {Math.round(item.main.temp_max)}°C</label>\n                </div>  \n                ))}\n            <div className='daily-item'>Month forecast</div>\n        </div>)\n}\n\nexport default Forecast;"],"mappings":";AAAA;AACA,OAAO,gBAAgB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AACvB,MAAMC,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;AAE/F,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC3B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACtC,MAAMC,YAAY,GAAGN,QAAQ,CAACO,KAAK,CAACJ,UAAU,EAAEH,QAAQ,CAACQ,MAAM,CAAC,CAACC,MAAM,CAACT,QAAQ,CAACO,KAAK,CAAC,CAAC,EAAEJ,UAAU,CAAC,CAAC;EAEtG,oBACIJ,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBT,IAAI,CAACU,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAClCjB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBZ,OAAA;QAAKkB,GAAG,EAAC,SAAS;QAACP,SAAS,EAAC,YAAY;QAACQ,GAAG,EAAG,SAAQH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtFzB,OAAA;QAAOW,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAEL,YAAY,CAACU,GAAG;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDzB,OAAA;QAAOW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEI,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACM;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpEzB,OAAA;QAAOW,SAAS,EAAC,SAAS;QAAAC,QAAA,GAAEe,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACa,IAAI,CAACC,QAAQ,CAAC,EAAC,UAAK,EAACH,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACa,IAAI,CAACE,QAAQ,CAAC,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAJ7ER,GAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK/B,CACJ,CAAC,eACNzB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AACd,CAAC;AAAAO,EAAA,GAhBK9B,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}