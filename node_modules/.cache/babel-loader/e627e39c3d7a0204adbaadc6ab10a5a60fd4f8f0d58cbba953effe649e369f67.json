{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Temp = ({\n  data\n}) => {\n  _s();\n  const dataParse = data.list;\n\n  // Modify map function to take data from every third entry\n  const chartData = dataParse.filter((item, index) => index % 3 === 0).map(item => ({\n    day: getDayOfWeek(item.dt_txt),\n    // Map time to days of the week\n    temperature: item.main.temp\n  }));\n  function getDayOfWeek(dateString) {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return daysOfWeek[date.getDay()];\n  }\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    axes: [{\n      type: 'ordinal',\n      position: 'bottom',\n      tick: {\n        count: 7\n      }\n    }, {\n      type: 'number',\n      position: 'right'\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    className: \"vis\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartOptions.data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"day\",\n        type: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"line\",\n        dataKey: \"temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Temp, \"Bdnwl8HsCE1Q2VYathfJtWkjLkI=\");\n_c = Temp;\nexport default Temp;\nvar _c;\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Temp","data","_s","dataParse","list","chartData","filter","item","index","map","day","getDayOfWeek","dt_txt","temperature","main","temp","dateString","daysOfWeek","date","Date","getDay","chartOptions","setChartOptions","title","axes","type","position","tick","count","className","children","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/components/charts/weekly-temp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport './weekly-temp.css';\n\n// Chart Component\nconst Temp = ({ data }) => {\n  const dataParse = data.list;\n\n  // Modify map function to take data from every third entry\n  const chartData = dataParse.filter((item, index) => index % 3 === 0).map((item) => ({\n    day: getDayOfWeek(item.dt_txt), // Map time to days of the week\n    temperature: item.main.temp,\n  }));\n\n  function getDayOfWeek(dateString) {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return daysOfWeek[date.getDay()];\n  }\n\n  const [chartOptions, setChartOptions] = useState({\n    title: \"Weekly Temp\",\n    data: chartData,\n    axes: [{ type: 'ordinal', position: 'bottom', tick: { count: 7 } }, { type: 'number', position: 'right' }],\n  });\n\n  return (\n    <ResponsiveContainer className='vis'>\n      <LineChart data={chartOptions.data}>\n        <XAxis dataKey=\"day\" type=\"category\" /> {/* Use XAxis with type \"category\" for days of the week */}\n        <YAxis />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Line type=\"line\" dataKey=\"temperature\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default Temp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,UAAU;AACrG,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAI;;EAE3B;EACA,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAACC,GAAG,CAAEF,IAAI,KAAM;IAClFG,GAAG,EAAEC,YAAY,CAACJ,IAAI,CAACK,MAAM,CAAC;IAAE;IAChCC,WAAW,EAAEN,IAAI,CAACO,IAAI,CAACC;EACzB,CAAC,CAAC,CAAC;EAEH,SAASJ,YAAYA,CAACK,UAAU,EAAE;IAChC,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACpE,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,UAAU,CAAC;IACjC,OAAOC,UAAU,CAACC,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;EAClC;EAEA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC;IAC/CiC,KAAK,EAAE,aAAa;IACpBtB,IAAI,EAAEI,SAAS;IACfmB,IAAI,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,IAAI,EAAE;QAAEC,KAAK,EAAE;MAAE;IAAE,CAAC,EAAE;MAAEH,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAQ,CAAC;EAC3G,CAAC,CAAC;EAEF,oBACE3B,OAAA,CAACF,mBAAmB;IAACgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClC/B,OAAA,CAACR,SAAS;MAACU,IAAI,EAAEoB,YAAY,CAACpB,IAAK;MAAA6B,QAAA,gBACjC/B,OAAA,CAACN,KAAK;QAACsC,OAAO,EAAC,KAAK;QAACN,IAAI,EAAC;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACxCpC,OAAA,CAACL,KAAK;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTpC,OAAA,CAACH,aAAa;QAACwC,eAAe,EAAC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCpC,OAAA,CAACJ,OAAO;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXpC,OAAA,CAACP,IAAI;QAACiC,IAAI,EAAC,MAAM;QAACM,OAAO,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAACjC,EAAA,CAhCIF,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}