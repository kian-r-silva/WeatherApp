{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forecast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  // const [cityName, setCityName] = useState(\"\");\n\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    // setCityName( searchData.label )\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weather = await response[0].json();\n      const forecast = await response[1].json();\n      setCurrentWeather(weather);\n      setForecastWeather(forecast);\n    }).catch(err => console.log(err));\n  };\n  console.log('currentWeather', currentWeather);\n  console.log('forecastWeather', forecastWeather);\n  //console.log('city', cityName)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: forecastWeather && /*#__PURE__*/_jsxDEV(Forecast, {\n        data: forecastWeather,\n        class: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uGMzGUv5UCam8sFPjc2rHk9f5uc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Forecast","CurrentWeather","WEATHER_API_KEY","WEATHER_API_URL","useState","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","forecastWeather","setForecastWeather","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weather","json","forecast","catch","err","console","log","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","class","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forecast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  // const [cityName, setCityName] = useState(\"\");\n  \n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n    // setCityName( searchData.label )\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async(response) => {\n        const weather = await response[0].json();\n        const forecast = await response[1].json();\n        \n        setCurrentWeather( weather )\n        setForecastWeather( forecast )\n\n      })\n      .catch((err) => console.log(err));\n  }\n\n  console.log('currentWeather', currentWeather)\n  console.log('forecastWeather', forecastWeather)\n  //console.log('city', cityName)\n\n  return (\n    <div className=\"main\">\n      <div className=\"search\">\n        <Search onSearchChange={handleOnSearchChange} />\n      </div>\n      <div className='main-content'>\n        {currentWeather && <CurrentWeather data={currentWeather} />}\n      </div>\n      <div className='main-content'>\n        {forecastWeather && <Forecast data={forecastWeather}class/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}