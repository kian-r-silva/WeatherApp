{"ast":null,"code":"var _jsxFileName = \"/Users/kiansilva/react-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forcast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport Visibility from './components/charts/visibility-chart';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  const [visibility, setVisibility] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const city = searchData.label;\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weather = await response[0].json();\n      const forecast = await response[1].json();\n      setCurrentWeather({\n        city: city,\n        ...weather\n      });\n      setForecastWeather(forecast);\n      setVisibility(forecast);\n    }).catch(err => console.log(err));\n  };\n  console.log('currentWeather', currentWeather);\n  console.log('forecastWeather', forecastWeather);\n  // console.log('visibility', visibility)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-weather\",\n      children: currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vis-chart\",\n      children: visibility && /*#__PURE__*/_jsxDEV(Visibility, {\n        data: visibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-forecast\",\n      children: forecastWeather && /*#__PURE__*/_jsxDEV(Forecast, {\n        data: forecastWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mPHwdmU9Pz451LJw4JWlWAsIwHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Forecast","CurrentWeather","Visibility","WEATHER_API_KEY","WEATHER_API_URL","useState","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","forecastWeather","setForecastWeather","visibility","setVisibility","handleOnSearchChange","searchData","lat","lon","value","split","city","label","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weather","json","forecast","catch","err","console","log","className","children","href","rel","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","data","_c","$RefreshReg$"],"sources":["/Users/kiansilva/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forcast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport Visibility from './components/charts/visibility-chart';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n  const [visibility, setVisibility] = useState(null);\n  \n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const city = searchData.label\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`)\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async(response) => {\n        const weather = await response[0].json();\n        const forecast = await response[1].json();\n        \n        setCurrentWeather({city: city, ...weather} )\n        setForecastWeather( forecast )\n        setVisibility( forecast )\n      })\n      .catch((err) => console.log(err));\n  }\n\n  console.log('currentWeather', currentWeather)\n  console.log('forecastWeather', forecastWeather)\n  // console.log('visibility', visibility)\n\n  return (\n    <div className=\"body\">\n      <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap\" rel=\"stylesheet\"></link>    \n      <div className=\"search\">\n        <Search onSearchChange={handleOnSearchChange} />\n      </div>\n      <div className='main-weather'>\n        {currentWeather && <CurrentWeather data={currentWeather} />}\n      </div>\n      <div className='vis-chart'>\n        {visibility  && <Visibility data={visibility}/>}\n      </div>\n      <div className='main-forecast'>\n        {forecastWeather && <Forecast data={forecastWeather}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,cAAc,MAAM,8CAA8C;AACzE,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAC9C,MAAMC,IAAI,GAAGL,UAAU,CAACM,KAAK;IAE7B,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAErB,eAAgB,gBAAec,GAAI,QAAOC,GAAI,UAAShB,eAAgB,eAAc,CAAC;IAC3H,MAAMuB,aAAa,GAAGD,KAAK,CAAE,GAAErB,eAAgB,iBAAgBc,GAAI,QAAOC,GAAI,UAAShB,eAAgB,eAAc,CAAC;IAEtHwB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,aAAa,CAAC,CAAC,CAC9CG,IAAI,CAAC,MAAMC,QAAQ,IAAK;MACvB,MAAMC,OAAO,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEzCrB,iBAAiB,CAAC;QAACW,IAAI,EAAEA,IAAI;QAAE,GAAGS;MAAO,CAAE,CAAC;MAC5ClB,kBAAkB,CAAEoB,QAAS,CAAC;MAC9BlB,aAAa,CAAEkB,QAAS,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE3B,cAAc,CAAC;EAC7C0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEzB,eAAe,CAAC;EAC/C;;EAEA,oBACEL,OAAA;IAAK+B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBhC,OAAA;MAAMiC,IAAI,EAAC,2EAA2E;MAACC,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/GtC,OAAA;MAAK+B,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBhC,OAAA,CAACR,MAAM;QAAC+C,cAAc,EAAE9B;MAAqB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNtC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B7B,cAAc,iBAAIH,OAAA,CAACN,cAAc;QAAC8C,IAAI,EAAErC;MAAe;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNtC,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBzB,UAAU,iBAAKP,OAAA,CAACL,UAAU;QAAC6C,IAAI,EAAEjC;MAAW;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNtC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B3B,eAAe,iBAAIL,OAAA,CAACP,QAAQ;QAAC+C,IAAI,EAAEnC;MAAgB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpC,EAAA,CA7CQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}